{"ast":null,"code":"var _jsxFileName = \"/Users/klickburn/Projects/client-db/ca-client-management/frontend/src/components/Dashboard/AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState, useRef } from 'react';\nimport { getUsers, deleteUser, getUserPassword } from '../../services/api';\nimport UserCreate from '../User/UserCreate';\nimport UserForm from '../User/UserForm';\nimport './AdminDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [clients, setClients] = useState([]);\n  const [stats, setStats] = useState({\n    totalUsers: 0,\n    totalClients: 0,\n    activeClients: 0\n  });\n  const [isAddingUser, setIsAddingUser] = useState(false);\n  const [editingUser, setEditingUser] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [passwordView, setPasswordView] = useState({\n    userId: null,\n    username: '',\n    hashedPassword: '',\n    isVisible: false,\n    showPassword: false\n  });\n  const passwordModalRef = useRef(null);\n  useEffect(() => {\n    fetchUsers();\n    fetchStats();\n  }, []);\n  useEffect(() => {\n    // Add event listener for closing the password modal when clicking outside\n    function handleClickOutside(event) {\n      if (passwordModalRef.current && !passwordModalRef.current.contains(event.target)) {\n        setPasswordView(prev => ({\n          ...prev,\n          isVisible: false\n        }));\n      }\n    }\n\n    // Attach the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Remove the event listener on cleanup\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [passwordModalRef]);\n  const fetchUsers = async () => {\n    try {\n      const response = await getUsers();\n      setUsers(response || []);\n      setStats(prevStats => ({\n        ...prevStats,\n        totalUsers: response ? response.length : 0\n      }));\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      setErrorMessage('Failed to fetch users. Please try again.');\n    }\n  };\n  const fetchStats = async () => {\n    try {\n      // In a real app, you would call an API endpoint to get dashboard stats\n      // For now, we'll use sample data\n      setStats({\n        totalUsers: users.length,\n        totalClients: 15,\n        activeClients: 12\n      });\n    } catch (error) {\n      console.error('Error fetching stats:', error);\n    }\n  };\n  const handleAddUser = () => {\n    setIsAddingUser(true);\n    setEditingUser(null);\n  };\n  const handleEditUser = user => {\n    setEditingUser(user);\n    setIsAddingUser(false);\n  };\n  const handleUserSaved = () => {\n    setIsAddingUser(false);\n    setEditingUser(null);\n    fetchUsers();\n  };\n  const handleCancelUserForm = () => {\n    setIsAddingUser(false);\n    setEditingUser(null);\n  };\n  const handleDeleteUser = async userId => {\n    if (window.confirm(\"Are you sure you want to delete this user?\")) {\n      try {\n        await deleteUser(userId);\n        fetchUsers();\n      } catch (error) {\n        console.error('Error deleting user:', error);\n        setErrorMessage('Failed to delete user. Please try again.');\n      }\n    }\n  };\n  const handleViewPassword = async (userId, username) => {\n    try {\n      // Close the modal if clicking the same user's button when already open\n      if (passwordView.isVisible && passwordView.userId === userId) {\n        setPasswordView(prev => ({\n          ...prev,\n          isVisible: false\n        }));\n        return;\n      }\n      const response = await getUserPassword(userId);\n      setPasswordView({\n        userId,\n        username: response.username || username,\n        hashedPassword: response.hashedPassword || 'Password not available',\n        isVisible: true,\n        showPassword: false\n      });\n    } catch (error) {\n      console.error('Error fetching user password:', error);\n      setErrorMessage('Failed to fetch user password. Please try again.');\n    }\n  };\n  const togglePasswordVisibility = () => {\n    setPasswordView(prev => ({\n      ...prev,\n      showPassword: !prev.showPassword\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [errorMessage, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setErrorMessage(''),\n        className: \"dismiss-button\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: stats.totalUsers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Clients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: stats.totalClients\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Active Clients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: stats.activeClients\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), isAddingUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-section-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create New User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-section-content\",\n        children: /*#__PURE__*/_jsxDEV(UserCreate, {\n          onSave: handleUserSaved,\n          onCancel: handleCancelUserForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }, this) : editingUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-section-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Edit User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-section-content\",\n        children: /*#__PURE__*/_jsxDEV(UserForm, {\n          user: editingUser,\n          onSave: handleUserSaved,\n          onCancel: handleCancelUserForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Registered Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-user-button\",\n          onClick: handleAddUser,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this), \" Add User\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-section-content\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"user-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: users.length > 0 ? users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `user-role ${user.role}`,\n                  children: user.role\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"action-button edit\",\n                  onClick: () => handleEditUser(user),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"action-button delete\",\n                  onClick: () => handleDeleteUser(user._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"action-button view-password\",\n                  onClick: () => handleViewPassword(user._id, user.username),\n                  children: passwordView.isVisible && passwordView.userId === user._id ? 'Hide Password' : 'View Password'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 45\n              }, this)]\n            }, user._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 41\n            }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"3\",\n                style: {\n                  textAlign: 'center'\n                },\n                children: \"No users found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }, this), passwordView.isVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-modal\",\n        ref: passwordModalRef,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Password for \", passwordView.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"dismiss-button\",\n            onClick: () => setPasswordView(prev => ({\n              ...prev,\n              isVisible: false\n            })),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"password-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"password-section-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Hashed Password:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"toggle-password-visibility\",\n                onClick: togglePasswordVisibility,\n                children: [passwordView.showPassword ? 'Hide' : 'Show', \" Password\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"password-display\",\n              children: passwordView.showPassword ? passwordView.hashedPassword : '••••••••••••••••••••••••••••••••••••••••'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"password-note\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-info-circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 33\n            }, this), \" This is a hashed password. For security reasons, the actual password cannot be retrieved.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminDashboard, \"l8jfdvGXtoAO0kqecUNuweiyodQ=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useRef","getUsers","deleteUser","getUserPassword","UserCreate","UserForm","jsxDEV","_jsxDEV","AdminDashboard","_s","users","setUsers","clients","setClients","stats","setStats","totalUsers","totalClients","activeClients","isAddingUser","setIsAddingUser","editingUser","setEditingUser","errorMessage","setErrorMessage","passwordView","setPasswordView","userId","username","hashedPassword","isVisible","showPassword","passwordModalRef","fetchUsers","fetchStats","handleClickOutside","event","current","contains","target","prev","document","addEventListener","removeEventListener","response","prevStats","length","error","console","handleAddUser","handleEditUser","user","handleUserSaved","handleCancelUserForm","handleDeleteUser","window","confirm","handleViewPassword","togglePasswordVisibility","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSave","onCancel","map","role","_id","colSpan","style","textAlign","ref","_c","$RefreshReg$"],"sources":["/Users/klickburn/Projects/client-db/ca-client-management/frontend/src/components/Dashboard/AdminDashboard.js"],"sourcesContent":["import React from 'react';\nimport { useEffect, useState, useRef } from 'react';\nimport { getUsers, deleteUser, getUserPassword } from '../../services/api';\nimport UserCreate from '../User/UserCreate';\nimport UserForm from '../User/UserForm';\nimport './AdminDashboard.css';\n\nconst AdminDashboard = () => {\n    const [users, setUsers] = useState([]);\n    const [clients, setClients] = useState([]);\n    const [stats, setStats] = useState({\n        totalUsers: 0,\n        totalClients: 0,\n        activeClients: 0\n    });\n    const [isAddingUser, setIsAddingUser] = useState(false);\n    const [editingUser, setEditingUser] = useState(null);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [passwordView, setPasswordView] = useState({\n        userId: null,\n        username: '',\n        hashedPassword: '',\n        isVisible: false,\n        showPassword: false\n    });\n    const passwordModalRef = useRef(null);\n\n    useEffect(() => {\n        fetchUsers();\n        fetchStats();\n    }, []);\n\n    useEffect(() => {\n        // Add event listener for closing the password modal when clicking outside\n        function handleClickOutside(event) {\n            if (passwordModalRef.current && !passwordModalRef.current.contains(event.target)) {\n                setPasswordView(prev => ({...prev, isVisible: false}));\n            }\n        }\n        \n        // Attach the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            // Remove the event listener on cleanup\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [passwordModalRef]);\n\n    const fetchUsers = async () => {\n        try {\n            const response = await getUsers();\n            setUsers(response || []);\n            setStats(prevStats => ({\n                ...prevStats,\n                totalUsers: response ? response.length : 0\n            }));\n        } catch (error) {\n            console.error('Error fetching users:', error);\n            setErrorMessage('Failed to fetch users. Please try again.');\n        }\n    };\n\n    const fetchStats = async () => {\n        try {\n            // In a real app, you would call an API endpoint to get dashboard stats\n            // For now, we'll use sample data\n            setStats({\n                totalUsers: users.length,\n                totalClients: 15,\n                activeClients: 12\n            });\n        } catch (error) {\n            console.error('Error fetching stats:', error);\n        }\n    };\n\n    const handleAddUser = () => {\n        setIsAddingUser(true);\n        setEditingUser(null);\n    };\n\n    const handleEditUser = (user) => {\n        setEditingUser(user);\n        setIsAddingUser(false);\n    };\n\n    const handleUserSaved = () => {\n        setIsAddingUser(false);\n        setEditingUser(null);\n        fetchUsers();\n    };\n\n    const handleCancelUserForm = () => {\n        setIsAddingUser(false);\n        setEditingUser(null);\n    };\n\n    const handleDeleteUser = async (userId) => {\n        if (window.confirm(\"Are you sure you want to delete this user?\")) {\n            try {\n                await deleteUser(userId);\n                fetchUsers();\n            } catch (error) {\n                console.error('Error deleting user:', error);\n                setErrorMessage('Failed to delete user. Please try again.');\n            }\n        }\n    };\n\n    const handleViewPassword = async (userId, username) => {\n        try {\n            // Close the modal if clicking the same user's button when already open\n            if (passwordView.isVisible && passwordView.userId === userId) {\n                setPasswordView(prev => ({...prev, isVisible: false}));\n                return;\n            }\n\n            const response = await getUserPassword(userId);\n            setPasswordView({\n                userId,\n                username: response.username || username,\n                hashedPassword: response.hashedPassword || 'Password not available',\n                isVisible: true,\n                showPassword: false\n            });\n        } catch (error) {\n            console.error('Error fetching user password:', error);\n            setErrorMessage('Failed to fetch user password. Please try again.');\n        }\n    };\n\n    const togglePasswordVisibility = () => {\n        setPasswordView(prev => ({...prev, showPassword: !prev.showPassword}));\n    };\n\n    return (\n        <div className=\"admin-dashboard\">\n            <h1>Admin Dashboard</h1>\n            \n            {errorMessage && (\n                <div className=\"error-message\">\n                    {errorMessage}\n                    <button onClick={() => setErrorMessage('')} className=\"dismiss-button\">×</button>\n                </div>\n            )}\n            \n            <div className=\"stats-cards\">\n                <div className=\"stat-card\">\n                    <h3>Total Users</h3>\n                    <div className=\"stat-value\">{stats.totalUsers}</div>\n                </div>\n                <div className=\"stat-card\">\n                    <h3>Total Clients</h3>\n                    <div className=\"stat-value\">{stats.totalClients}</div>\n                </div>\n                <div className=\"stat-card\">\n                    <h3>Active Clients</h3>\n                    <div className=\"stat-value\">{stats.activeClients}</div>\n                </div>\n            </div>\n            \n            {isAddingUser ? (\n                <div className=\"card-section\">\n                    <div className=\"card-section-header\">\n                        <h2>Create New User</h2>\n                    </div>\n                    <div className=\"card-section-content\">\n                        <UserCreate onSave={handleUserSaved} onCancel={handleCancelUserForm} />\n                    </div>\n                </div>\n            ) : editingUser ? (\n                <div className=\"card-section\">\n                    <div className=\"card-section-header\">\n                        <h2>Edit User</h2>\n                    </div>\n                    <div className=\"card-section-content\">\n                        <UserForm \n                            user={editingUser} \n                            onSave={handleUserSaved} \n                            onCancel={handleCancelUserForm} \n                        />\n                    </div>\n                </div>\n            ) : (\n                <div className=\"card-section\">\n                    <div className=\"card-section-header\">\n                        <h2>Registered Users</h2>\n                        <button className=\"add-user-button\" onClick={handleAddUser}>\n                            <i className=\"fas fa-plus\"></i> Add User\n                        </button>\n                    </div>\n                    <div className=\"card-section-content\">\n                        <table className=\"user-table\">\n                            <thead>\n                                <tr>\n                                    <th>Username</th>\n                                    <th>Role</th>\n                                    <th>Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {users.length > 0 ? (\n                                    users.map(user => (\n                                        <tr key={user._id}>\n                                            <td>{user.username}</td>\n                                            <td>\n                                                <span className={`user-role ${user.role}`}>\n                                                    {user.role}\n                                                </span>\n                                            </td>\n                                            <td>\n                                                <button \n                                                    className=\"action-button edit\"\n                                                    onClick={() => handleEditUser(user)}\n                                                >\n                                                    Edit\n                                                </button>\n                                                <button \n                                                    className=\"action-button delete\"\n                                                    onClick={() => handleDeleteUser(user._id)}\n                                                >\n                                                    Delete\n                                                </button>\n                                                <button \n                                                    className=\"action-button view-password\"\n                                                    onClick={() => handleViewPassword(user._id, user.username)}\n                                                >\n                                                    {passwordView.isVisible && passwordView.userId === user._id \n                                                        ? 'Hide Password' \n                                                        : 'View Password'}\n                                                </button>\n                                            </td>\n                                        </tr>\n                                    ))\n                                ) : (\n                                    <tr>\n                                        <td colSpan=\"3\" style={{ textAlign: 'center' }}>No users found</td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            )}\n\n            {/* Password View Modal */}\n            {passwordView.isVisible && (\n                <div className=\"password-modal-overlay\">\n                    <div className=\"password-modal\" ref={passwordModalRef}>\n                        <div className=\"password-modal-header\">\n                            <h3>Password for {passwordView.username}</h3>\n                            <button \n                                className=\"dismiss-button\" \n                                onClick={() => setPasswordView(prev => ({...prev, isVisible: false}))}\n                            >\n                                ×\n                            </button>\n                        </div>\n                        <div className=\"password-modal-content\">\n                            <div className=\"password-section\">\n                                <div className=\"password-section-header\">\n                                    <p>Hashed Password:</p>\n                                    <button \n                                        className=\"toggle-password-visibility\" \n                                        onClick={togglePasswordVisibility}\n                                    >\n                                        {passwordView.showPassword ? 'Hide' : 'Show'} Password\n                                    </button>\n                                </div>\n                                <div className=\"password-display\">\n                                    {passwordView.showPassword \n                                        ? passwordView.hashedPassword \n                                        : '••••••••••••••••••••••••••••••••••••••••'}\n                                </div>\n                            </div>\n                            <p className=\"password-note\">\n                                <i className=\"fas fa-info-circle\"></i> This is a hashed password. For security reasons, the actual password cannot be retrieved.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default AdminDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}