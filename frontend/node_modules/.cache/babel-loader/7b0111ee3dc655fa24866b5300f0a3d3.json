{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5001/api'; // Update with your backend URL\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to include the auth token in every request\napi.interceptors.request.use(config => {\n  try {\n    const userStr = localStorage.getItem('user');\n    if (userStr) {\n      const user = JSON.parse(userStr);\n      if (user && user.token) {\n        config.headers.Authorization = `Bearer ${user.token}`;\n      }\n    }\n  } catch (error) {\n    console.error('Error setting auth header:', error);\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add a response interceptor to handle token expiration\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  if (error.response) {\n    if (error.response.status === 401) {\n      // Token expired or invalid, logout the user\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    } else if (error.response.status === 403) {\n      console.error('Permission denied. Please check your access rights.');\n    } else if (error.response.status === 500) {\n      console.error('Server error:', error.response.data);\n    }\n  } else if (error.request) {\n    // The request was made but no response was received\n    console.error('No response received from server:', error.request);\n  } else {\n    // Something happened in setting up the request that triggered an error\n    console.error('Error setting up request:', error.message);\n  }\n  return Promise.reject(error);\n});\n\n// Example API call to login\nexport const login = async credentials => {\n  const response = await api.post('/auth/login', credentials);\n  return response.data;\n};\n\n// Example API call to create a user\nexport const createUser = async userData => {\n  const response = await api.post('/users/create', userData);\n  return response.data;\n};\n\n// Example API call to get users\nexport const getUsers = async () => {\n  const response = await api.get('/users');\n  return response.data;\n};\n\n// Example API call to get clients\nexport const getClients = async () => {\n  const response = await api.get('/clients');\n  return response.data;\n};\n\n// API call to delete a user\nexport const deleteUser = async userId => {\n  const response = await api.delete(`/users/${userId}`);\n  return response.data;\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","userStr","localStorage","getItem","user","JSON","parse","token","Authorization","error","console","Promise","reject","response","status","removeItem","window","location","href","data","message","login","credentials","post","createUser","userData","getUsers","get","getClients","deleteUser","userId","delete"],"sources":["/Users/klickburn/Projects/client-db/ca-client-management/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5001/api'; // Update with your backend URL\n\nconst api = axios.create({\n    baseURL: API_URL,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n// Add a request interceptor to include the auth token in every request\napi.interceptors.request.use(\n    (config) => {\n        try {\n            const userStr = localStorage.getItem('user');\n            if (userStr) {\n                const user = JSON.parse(userStr);\n                if (user && user.token) {\n                    config.headers.Authorization = `Bearer ${user.token}`;\n                }\n            }\n        } catch (error) {\n            console.error('Error setting auth header:', error);\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\n// Add a response interceptor to handle token expiration\napi.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    (error) => {\n        if (error.response) {\n            if (error.response.status === 401) {\n                // Token expired or invalid, logout the user\n                localStorage.removeItem('user');\n                window.location.href = '/login';\n            } else if (error.response.status === 403) {\n                console.error('Permission denied. Please check your access rights.');\n            } else if (error.response.status === 500) {\n                console.error('Server error:', error.response.data);\n            }\n        } else if (error.request) {\n            // The request was made but no response was received\n            console.error('No response received from server:', error.request);\n        } else {\n            // Something happened in setting up the request that triggered an error\n            console.error('Error setting up request:', error.message);\n        }\n        return Promise.reject(error);\n    }\n);\n\n// Example API call to login\nexport const login = async (credentials) => {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n};\n\n// Example API call to create a user\nexport const createUser = async (userData) => {\n    const response = await api.post('/users/create', userData);\n    return response.data;\n};\n\n// Example API call to get users\nexport const getUsers = async () => {\n    const response = await api.get('/users');\n    return response.data;\n};\n\n// Example API call to get clients\nexport const getClients = async () => {\n    const response = await api.get('/clients');\n    return response.data;\n};\n\n// API call to delete a user\nexport const deleteUser = async (userId) => {\n    const response = await api.delete(`/users/${userId}`);\n    return response.data;\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}