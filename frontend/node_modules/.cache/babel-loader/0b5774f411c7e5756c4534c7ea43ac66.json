{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5001/api'; // Update with your backend URL\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to include the auth token in every request\napi.interceptors.request.use(config => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  if (user && user.token) {\n    config.headers.Authorization = `Bearer ${user.token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add a response interceptor to handle token expiration\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  if (error.response && error.response.status === 401) {\n    // Token expired or invalid, logout the user\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Example API call to login\nexport const login = async credentials => {\n  const response = await api.post('/auth/login', credentials);\n  return response.data;\n};\n\n// Example API call to create a user\nexport const createUser = async userData => {\n  const response = await api.post('/users', userData);\n  return response.data;\n};\n\n// Example API call to get users\nexport const getUsers = async () => {\n  const response = await api.get('/users');\n  return response.data;\n};\n\n// Example API call to get clients\nexport const getClients = async () => {\n  const response = await api.get('/clients');\n  return response.data;\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","token","Authorization","error","Promise","reject","response","status","removeItem","window","location","href","login","credentials","post","data","createUser","userData","getUsers","get","getClients"],"sources":["/Users/klickburn/Projects/client-db/ca-client-management/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5001/api'; // Update with your backend URL\n\nconst api = axios.create({\n    baseURL: API_URL,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n// Add a request interceptor to include the auth token in every request\napi.interceptors.request.use(\n    (config) => {\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (user && user.token) {\n            config.headers.Authorization = `Bearer ${user.token}`;\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\n// Add a response interceptor to handle token expiration\napi.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    (error) => {\n        if (error.response && error.response.status === 401) {\n            // Token expired or invalid, logout the user\n            localStorage.removeItem('user');\n            window.location.href = '/login';\n        }\n        return Promise.reject(error);\n    }\n);\n\n// Example API call to login\nexport const login = async (credentials) => {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n};\n\n// Example API call to create a user\nexport const createUser = async (userData) => {\n    const response = await api.post('/users', userData);\n    return response.data;\n};\n\n// Example API call to get users\nexport const getUsers = async () => {\n    const response = await api.get('/users');\n    return response.data;\n};\n\n// Example API call to get clients\nexport const getClients = async () => {\n    const response = await api.get('/clients');\n    return response.data;\n};\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B,CAAC,CAAC;;AAE7C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACvBC,MAAM,IAAK;EACR,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACrD,IAAIJ,IAAI,IAAIA,IAAI,CAACK,KAAK,EAAE;IACpBN,MAAM,CAACJ,OAAO,CAACW,aAAa,GAAG,UAAUN,IAAI,CAACK,KAAK,EAAE;EACzD;EACA,OAAON,MAAM;AACjB,CAAC,EACAQ,KAAK,IAAK;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACAf,GAAG,CAACI,YAAY,CAACc,QAAQ,CAACZ,GAAG,CACxBY,QAAQ,IAAK;EACV,OAAOA,QAAQ;AACnB,CAAC,EACAH,KAAK,IAAK;EACP,IAAIA,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACjD;IACAR,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACnC;EACA,OAAOP,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACA,OAAO,MAAMS,KAAK,GAAG,MAAOC,WAAW,IAAK;EACxC,MAAMP,QAAQ,GAAG,MAAMlB,GAAG,CAAC0B,IAAI,CAAC,aAAa,EAAED,WAAW,CAAC;EAC3D,OAAOP,QAAQ,CAACS,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAQ,IAAK;EAC1C,MAAMX,QAAQ,GAAG,MAAMlB,GAAG,CAAC0B,IAAI,CAAC,QAAQ,EAAEG,QAAQ,CAAC;EACnD,OAAOX,QAAQ,CAACS,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMG,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAChC,MAAMZ,QAAQ,GAAG,MAAMlB,GAAG,CAAC+B,GAAG,CAAC,QAAQ,CAAC;EACxC,OAAOb,QAAQ,CAACS,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMK,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMd,QAAQ,GAAG,MAAMlB,GAAG,CAAC+B,GAAG,CAAC,UAAU,CAAC;EAC1C,OAAOb,QAAQ,CAACS,IAAI;AACxB,CAAC;AAED,eAAe3B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module"}