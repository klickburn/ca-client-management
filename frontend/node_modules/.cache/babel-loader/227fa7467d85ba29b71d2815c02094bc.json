{"ast":null,"code":"import React,{useState,useEffect}from'react';import documentService from'../../services/documentService';import'./DocumentManager.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DocumentManager=_ref=>{let{clientId}=_ref;const[documents,setDocuments]=useState([]);const[loading,setLoading]=useState(true);const[uploading,setUploading]=useState(false);const[error,setError]=useState(null);const[fileToUpload,setFileToUpload]=useState(null);useEffect(()=>{if(clientId){fetchDocuments();}else{console.warn('DocumentManager: No client ID provided');setDocuments([]);setLoading(false);}},[clientId]);const fetchDocuments=async()=>{try{setLoading(true);const docs=await documentService.getDocuments(clientId);setDocuments(docs);setError(null);}catch(err){console.error('Error fetching documents:',err);setError('Failed to load documents. Please try again.');setDocuments([]);}finally{setLoading(false);}};const handleFileChange=e=>{if(e.target.files[0]){setFileToUpload(e.target.files[0]);}};const handleUpload=async()=>{if(!fileToUpload){setError('Please select a file to upload');return;}// Validate file type\nconst allowedTypes=['application/pdf','application/msword','application/vnd.openxmlformats-officedocument.wordprocessingml.document','application/vnd.ms-excel','application/vnd.openxmlformats-officedocument.spreadsheetml.sheet','image/jpeg','image/png'];if(!allowedTypes.includes(fileToUpload.type)){setError('Invalid file type. Only PDF, Word, Excel, and image files are allowed.');return;}// Validate file size (max 10MB)\nif(fileToUpload.size>10*1024*1024){setError('File too large. Maximum file size is 10MB.');return;}try{setUploading(true);setError(null);await documentService.uploadDocument(clientId,fileToUpload);setFileToUpload(null);// Reset the file input\nconst fileInput=document.getElementById('document-upload');if(fileInput){fileInput.value='';}await fetchDocuments();}catch(err){console.error('Error uploading document:',err);setError('Failed to upload document. Please try again.');}finally{setUploading(false);}};const handleDelete=async documentId=>{if(window.confirm('Are you sure you want to delete this document?')){try{setError(null);await documentService.deleteDocument(clientId,documentId);// Update the local state to remove the deleted document\nsetDocuments(prevDocuments=>prevDocuments.filter(doc=>doc._id!==documentId));}catch(err){console.error('Error deleting document:',err);setError('Failed to delete document. Please try again.');// Refresh the document list to ensure UI is in sync with server\nfetchDocuments();}}};const formatFileSize=bytes=>{if(bytes<1024)return bytes+' bytes';else if(bytes<1048576)return(bytes/1024).toFixed(1)+' KB';else return(bytes/1048576).toFixed(1)+' MB';};const formatDate=dateString=>{return new Date(dateString).toLocaleDateString('en-IN',{day:'numeric',month:'short',year:'numeric'});};const getFileIcon=type=>{if(type.includes('pdf'))return'📄';else if(type.includes('word'))return'📝';else if(type.includes('excel')||type.includes('spreadsheet'))return'📊';else if(type.includes('image'))return'🖼️';else return'📎';};return/*#__PURE__*/_jsxs(\"div\",{className:\"document-manager\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"document-upload\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Upload Document\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"upload-controls\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:handleFileChange,className:\"file-input\",id:\"document-upload\",disabled:uploading}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"document-upload\",className:`file-label ${uploading?'disabled':''}`,children:fileToUpload?fileToUpload.name:'Choose File'}),/*#__PURE__*/_jsx(\"button\",{className:\"upload-button\",onClick:handleUpload,disabled:!fileToUpload||uploading,children:uploading?'Uploading...':'Upload'})]}),/*#__PURE__*/_jsx(\"p\",{className:\"upload-note\",children:\"Accepted formats: PDF, Word, Excel, and images (up to 10MB)\"}),uploading&&/*#__PURE__*/_jsxs(\"div\",{className:\"upload-progress\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-indicator\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Uploading document, please wait...\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"document-list\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Client Documents\"}),loading?/*#__PURE__*/_jsx(\"div\",{className:\"loading-indicator\",children:\"Loading documents...\"}):documents.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"no-documents\",children:\"No documents uploaded yet\"}):/*#__PURE__*/_jsx(\"div\",{className:\"documents-table-container\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"documents-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Type\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Size\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Uploaded\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:documents.map(doc=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{className:\"document-name\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"file-icon\",children:getFileIcon(doc.type)}),doc.name]}),/*#__PURE__*/_jsx(\"td\",{children:doc.type.split('/')[1].toUpperCase()}),/*#__PURE__*/_jsx(\"td\",{children:formatFileSize(doc.size)}),/*#__PURE__*/_jsx(\"td\",{children:formatDate(doc.uploadedAt)}),/*#__PURE__*/_jsxs(\"td\",{className:\"document-actions\",children:[/*#__PURE__*/_jsx(\"a\",{href:documentService.getDocumentUrl(clientId,doc._id),target:\"_blank\",rel:\"noopener noreferrer\",className:\"action-button view-button\",children:\"View\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-button delete-button\",onClick:()=>handleDelete(doc._id),children:\"Delete\"})]})]},doc._id))})]})})]})]});};export default DocumentManager;","map":{"version":3,"names":["React","useState","useEffect","documentService","jsx","_jsx","jsxs","_jsxs","DocumentManager","_ref","clientId","documents","setDocuments","loading","setLoading","uploading","setUploading","error","setError","fileToUpload","setFileToUpload","fetchDocuments","console","warn","docs","getDocuments","err","handleFileChange","e","target","files","handleUpload","allowedTypes","includes","type","size","uploadDocument","fileInput","document","getElementById","value","handleDelete","documentId","window","confirm","deleteDocument","prevDocuments","filter","doc","_id","formatFileSize","bytes","toFixed","formatDate","dateString","Date","toLocaleDateString","day","month","year","getFileIcon","className","children","onChange","id","disabled","htmlFor","name","onClick","length","map","split","toUpperCase","uploadedAt","href","getDocumentUrl","rel"],"sources":["/Users/klickburn/Projects/client-db/ca-client-management/frontend/src/components/Client/DocumentManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport documentService from '../../services/documentService';\nimport './DocumentManager.css';\n\nconst DocumentManager = ({ clientId }) => {\n    const [documents, setDocuments] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [uploading, setUploading] = useState(false);\n    const [error, setError] = useState(null);\n    const [fileToUpload, setFileToUpload] = useState(null);\n\n    useEffect(() => {\n        if (clientId) {\n            fetchDocuments();\n        } else {\n            console.warn('DocumentManager: No client ID provided');\n            setDocuments([]);\n            setLoading(false);\n        }\n    }, [clientId]);\n\n    const fetchDocuments = async () => {\n        try {\n            setLoading(true);\n            const docs = await documentService.getDocuments(clientId);\n            setDocuments(docs);\n            setError(null);\n        } catch (err) {\n            console.error('Error fetching documents:', err);\n            setError('Failed to load documents. Please try again.');\n            setDocuments([]);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleFileChange = (e) => {\n        if (e.target.files[0]) {\n            setFileToUpload(e.target.files[0]);\n        }\n    };\n\n    const handleUpload = async () => {\n        if (!fileToUpload) {\n            setError('Please select a file to upload');\n            return;\n        }\n\n        // Validate file type\n        const allowedTypes = [\n            'application/pdf',\n            'application/msword',\n            'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n            'application/vnd.ms-excel',\n            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n            'image/jpeg',\n            'image/png'\n        ];\n        \n        if (!allowedTypes.includes(fileToUpload.type)) {\n            setError('Invalid file type. Only PDF, Word, Excel, and image files are allowed.');\n            return;\n        }\n        \n        // Validate file size (max 10MB)\n        if (fileToUpload.size > 10 * 1024 * 1024) {\n            setError('File too large. Maximum file size is 10MB.');\n            return;\n        }\n\n        try {\n            setUploading(true);\n            setError(null);\n            await documentService.uploadDocument(clientId, fileToUpload);\n            setFileToUpload(null);\n            // Reset the file input\n            const fileInput = document.getElementById('document-upload');\n            if (fileInput) {\n                fileInput.value = '';\n            }\n            await fetchDocuments();\n        } catch (err) {\n            console.error('Error uploading document:', err);\n            setError('Failed to upload document. Please try again.');\n        } finally {\n            setUploading(false);\n        }\n    };\n\n    const handleDelete = async (documentId) => {\n        if (window.confirm('Are you sure you want to delete this document?')) {\n            try {\n                setError(null);\n                await documentService.deleteDocument(clientId, documentId);\n                \n                // Update the local state to remove the deleted document\n                setDocuments(prevDocuments => \n                    prevDocuments.filter(doc => doc._id !== documentId)\n                );\n                \n            } catch (err) {\n                console.error('Error deleting document:', err);\n                setError('Failed to delete document. Please try again.');\n                // Refresh the document list to ensure UI is in sync with server\n                fetchDocuments();\n            }\n        }\n    };\n\n    const formatFileSize = (bytes) => {\n        if (bytes < 1024) return bytes + ' bytes';\n        else if (bytes < 1048576) return (bytes / 1024).toFixed(1) + ' KB';\n        else return (bytes / 1048576).toFixed(1) + ' MB';\n    };\n\n    const formatDate = (dateString) => {\n        return new Date(dateString).toLocaleDateString('en-IN', {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric'\n        });\n    };\n\n    const getFileIcon = (type) => {\n        if (type.includes('pdf')) return '📄';\n        else if (type.includes('word')) return '📝';\n        else if (type.includes('excel') || type.includes('spreadsheet')) return '📊';\n        else if (type.includes('image')) return '🖼️';\n        else return '📎';\n    };\n\n    return (\n        <div className=\"document-manager\">\n            <div className=\"document-upload\">\n                <h3>Upload Document</h3>\n                {error && <div className=\"error-message\">{error}</div>}\n                \n                <div className=\"upload-controls\">\n                    <input \n                        type=\"file\" \n                        onChange={handleFileChange}\n                        className=\"file-input\"\n                        id=\"document-upload\"\n                        disabled={uploading}\n                    />\n                    <label htmlFor=\"document-upload\" className={`file-label ${uploading ? 'disabled' : ''}`}>\n                        {fileToUpload ? fileToUpload.name : 'Choose File'}\n                    </label>\n                    \n                    <button \n                        className=\"upload-button\"\n                        onClick={handleUpload}\n                        disabled={!fileToUpload || uploading}\n                    >\n                        {uploading ? 'Uploading...' : 'Upload'}\n                    </button>\n                </div>\n                <p className=\"upload-note\">\n                    Accepted formats: PDF, Word, Excel, and images (up to 10MB)\n                </p>\n                {uploading && (\n                    <div className=\"upload-progress\">\n                        <div className=\"progress-indicator\"></div>\n                        <p>Uploading document, please wait...</p>\n                    </div>\n                )}\n            </div>\n            \n            <div className=\"document-list\">\n                <h3>Client Documents</h3>\n                \n                {loading ? (\n                    <div className=\"loading-indicator\">Loading documents...</div>\n                ) : documents.length === 0 ? (\n                    <p className=\"no-documents\">No documents uploaded yet</p>\n                ) : (\n                    <div className=\"documents-table-container\">\n                        <table className=\"documents-table\">\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Type</th>\n                                    <th>Size</th>\n                                    <th>Uploaded</th>\n                                    <th>Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {documents.map(doc => (\n                                    <tr key={doc._id}>\n                                        <td className=\"document-name\">\n                                            <span className=\"file-icon\">{getFileIcon(doc.type)}</span>\n                                            {doc.name}\n                                        </td>\n                                        <td>{doc.type.split('/')[1].toUpperCase()}</td>\n                                        <td>{formatFileSize(doc.size)}</td>\n                                        <td>{formatDate(doc.uploadedAt)}</td>\n                                        <td className=\"document-actions\">\n                                            <a \n                                                href={documentService.getDocumentUrl(clientId, doc._id)}\n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                                className=\"action-button view-button\"\n                                            >\n                                                View\n                                            </a>\n                                            <button \n                                                className=\"action-button delete-button\"\n                                                onClick={() => handleDelete(doc._id)}\n                                            >\n                                                Delete\n                                            </button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default DocumentManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}