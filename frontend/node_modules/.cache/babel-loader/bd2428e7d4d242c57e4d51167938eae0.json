{"ast":null,"code":"var _jsxFileName = \"/Users/klickburn/Projects/client-db/ca-client-management/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { authService } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const currentUser = await authService.getCurrentUser();\n        setUser(currentUser);\n      } catch (error) {\n        console.error(\"Failed to fetch user:\", error);\n        // Clear the invalid user data if there's an error\n        localStorage.removeItem('user');\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUser();\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const loggedInUser = await authService.login(username, password);\n      setUser(loggedInUser);\n      return loggedInUser;\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      throw error;\n    }\n  };\n  const logout = async () => {\n    await authService.logout();\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","fetchUser","currentUser","getCurrentUser","error","console","localStorage","removeItem","login","username","password","loggedInUser","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/klickburn/Projects/client-db/ca-client-management/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { authService } from '../services/authService';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchUser = async () => {\n            try {\n                const currentUser = await authService.getCurrentUser();\n                setUser(currentUser);\n            } catch (error) {\n                console.error(\"Failed to fetch user:\", error);\n                // Clear the invalid user data if there's an error\n                localStorage.removeItem('user');\n                setUser(null);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchUser();\n    }, []);\n\n    const login = async (username, password) => {\n        try {\n            const loggedInUser = await authService.login(username, password);\n            setUser(loggedInUser);\n            return loggedInUser;\n        } catch (error) {\n            console.error(\"Login failed:\", error);\n            throw error;\n        }\n    };\n\n    const logout = async () => {\n        await authService.logout();\n        setUser(null);\n    };\n\n    return (\n        <AuthContext.Provider value={{ user, loading, login, logout }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,WAAW,GAAG,MAAMZ,WAAW,CAACa,cAAc,CAAC,CAAC;QACtDL,OAAO,CAACI,WAAW,CAAC;MACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7C;QACAE,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;QAC/BT,OAAO,CAAC,IAAI,CAAC;MACjB,CAAC,SAAS;QACNE,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACxC,IAAI;MACA,MAAMC,YAAY,GAAG,MAAMrB,WAAW,CAACkB,KAAK,CAACC,QAAQ,EAAEC,QAAQ,CAAC;MAChEZ,OAAO,CAACa,YAAY,CAAC;MACrB,OAAOA,YAAY;IACvB,CAAC,CAAC,OAAOP,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,MAAMA,KAAK;IACf;EACJ,CAAC;EAED,MAAMQ,MAAM,GAAG,MAAAA,CAAA,KAAY;IACvB,MAAMtB,WAAW,CAACsB,MAAM,CAAC,CAAC;IAC1Bd,OAAO,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,oBACIN,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,IAAI;MAAEE,OAAO;MAAES,KAAK;MAAEI;IAAO,CAAE;IAAAjB,QAAA,EACzDA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACtB,EAAA,CA3CWF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}