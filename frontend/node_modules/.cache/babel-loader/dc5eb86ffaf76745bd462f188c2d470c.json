{"ast":null,"code":"import React from'react';import{useEffect,useState,useRef}from'react';import{getUsers,deleteUser,getUserPassword}from'../../services/api';import UserCreate from'../User/UserCreate';import UserForm from'../User/UserForm';import'./AdminDashboard.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AdminDashboard=()=>{const[users,setUsers]=useState([]);const[clients,setClients]=useState([]);const[stats,setStats]=useState({totalUsers:0,totalClients:0,activeClients:0});const[isAddingUser,setIsAddingUser]=useState(false);const[editingUser,setEditingUser]=useState(null);const[errorMessage,setErrorMessage]=useState('');const[passwordView,setPasswordView]=useState({userId:null,username:'',hashedPassword:'',isVisible:false,showPassword:false});const passwordModalRef=useRef(null);useEffect(()=>{fetchUsers();fetchStats();},[]);useEffect(()=>{// Add event listener for closing the password modal when clicking outside\nfunction handleClickOutside(event){if(passwordModalRef.current&&!passwordModalRef.current.contains(event.target)){setPasswordView(prev=>({...prev,isVisible:false}));}}// Attach the event listener\ndocument.addEventListener(\"mousedown\",handleClickOutside);return()=>{// Remove the event listener on cleanup\ndocument.removeEventListener(\"mousedown\",handleClickOutside);};},[passwordModalRef]);const fetchUsers=async()=>{try{const response=await getUsers();setUsers(response||[]);setStats(prevStats=>({...prevStats,totalUsers:response?response.length:0}));}catch(error){console.error('Error fetching users:',error);setErrorMessage('Failed to fetch users. Please try again.');}};const fetchStats=async()=>{try{// In a real app, you would call an API endpoint to get dashboard stats\n// For now, we'll use sample data\nsetStats({totalUsers:users.length,totalClients:15,activeClients:12});}catch(error){console.error('Error fetching stats:',error);}};const handleAddUser=()=>{setIsAddingUser(true);setEditingUser(null);};const handleEditUser=user=>{setEditingUser(user);setIsAddingUser(false);};const handleUserSaved=()=>{setIsAddingUser(false);setEditingUser(null);fetchUsers();};const handleCancelUserForm=()=>{setIsAddingUser(false);setEditingUser(null);};const handleDeleteUser=async userId=>{if(window.confirm(\"Are you sure you want to delete this user?\")){try{await deleteUser(userId);fetchUsers();}catch(error){console.error('Error deleting user:',error);setErrorMessage('Failed to delete user. Please try again.');}}};const handleViewPassword=async(userId,username)=>{try{// Close the modal if clicking the same user's button when already open\nif(passwordView.isVisible&&passwordView.userId===userId){setPasswordView(prev=>({...prev,isVisible:false}));return;}const response=await getUserPassword(userId);setPasswordView({userId,username:response.username||username,hashedPassword:response.hashedPassword||'Password not available',isVisible:true,showPassword:false});}catch(error){console.error('Error fetching user password:',error);setErrorMessage('Failed to fetch user password. Please try again.');}};const togglePasswordVisibility=()=>{setPasswordView(prev=>({...prev,showPassword:!prev.showPassword}));};return/*#__PURE__*/_jsxs(\"div\",{className:\"admin-dashboard\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Admin Dashboard\"}),errorMessage&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[errorMessage,/*#__PURE__*/_jsx(\"button\",{onClick:()=>setErrorMessage(''),className:\"dismiss-button\",children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-cards\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Total Users\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:stats.totalUsers})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Total Clients\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:stats.totalClients})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Active Clients\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:stats.activeClients})]})]}),isAddingUser?/*#__PURE__*/_jsxs(\"div\",{className:\"card-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-section-header\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Create New User\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-section-content\",children:/*#__PURE__*/_jsx(UserCreate,{onSave:handleUserSaved,onCancel:handleCancelUserForm})})]}):editingUser?/*#__PURE__*/_jsxs(\"div\",{className:\"card-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-section-header\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Edit User\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-section-content\",children:/*#__PURE__*/_jsx(UserForm,{user:editingUser,onSave:handleUserSaved,onCancel:handleCancelUserForm})})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"card-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Registered Users\"}),/*#__PURE__*/_jsxs(\"button\",{className:\"add-user-button\",onClick:handleAddUser,children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-plus\"}),\" Add User\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-section-content\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"user-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Username\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Role\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:users.length>0?users.map(user=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:user.username}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:`user-role ${user.role}`,children:user.role})}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"action-button edit\",onClick:()=>handleEditUser(user),children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-button delete\",onClick:()=>handleDeleteUser(user._id),children:\"Delete\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-button view-password\",onClick:()=>handleViewPassword(user._id,user.username),children:passwordView.isVisible&&passwordView.userId===user._id?'Hide Password':'View Password'})]})]},user._id)):/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"3\",style:{textAlign:'center'},children:\"No users found\"})})})]})})]}),passwordView.isVisible&&/*#__PURE__*/_jsx(\"div\",{className:\"password-modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"password-modal\",ref:passwordModalRef,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"password-modal-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Password for \",passwordView.username]}),/*#__PURE__*/_jsx(\"button\",{className:\"dismiss-button\",onClick:()=>setPasswordView(prev=>({...prev,isVisible:false})),children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"password-modal-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"password-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"password-section-header\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Hashed Password:\"}),/*#__PURE__*/_jsxs(\"button\",{className:\"toggle-password-visibility\",onClick:togglePasswordVisibility,children:[passwordView.showPassword?'Hide':'Show',\" Password\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"password-display\",children:passwordView.showPassword?passwordView.hashedPassword:'••••••••••••••••••••••••••••••••••••••••'})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"password-note\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-info-circle\"}),\" This is a hashed password. For security reasons, the actual password cannot be retrieved.\"]})]})]})})]});};export default AdminDashboard;","map":{"version":3,"names":["React","useEffect","useState","useRef","getUsers","deleteUser","getUserPassword","UserCreate","UserForm","jsx","_jsx","jsxs","_jsxs","AdminDashboard","users","setUsers","clients","setClients","stats","setStats","totalUsers","totalClients","activeClients","isAddingUser","setIsAddingUser","editingUser","setEditingUser","errorMessage","setErrorMessage","passwordView","setPasswordView","userId","username","hashedPassword","isVisible","showPassword","passwordModalRef","fetchUsers","fetchStats","handleClickOutside","event","current","contains","target","prev","document","addEventListener","removeEventListener","response","prevStats","length","error","console","handleAddUser","handleEditUser","user","handleUserSaved","handleCancelUserForm","handleDeleteUser","window","confirm","handleViewPassword","togglePasswordVisibility","className","children","onClick","onSave","onCancel","map","role","_id","colSpan","style","textAlign","ref"],"sources":["/Users/klickburn/Projects/client-db/ca-client-management/frontend/src/components/Dashboard/AdminDashboard.js"],"sourcesContent":["import React from 'react';\nimport { useEffect, useState, useRef } from 'react';\nimport { getUsers, deleteUser, getUserPassword } from '../../services/api';\nimport UserCreate from '../User/UserCreate';\nimport UserForm from '../User/UserForm';\nimport './AdminDashboard.css';\n\nconst AdminDashboard = () => {\n    const [users, setUsers] = useState([]);\n    const [clients, setClients] = useState([]);\n    const [stats, setStats] = useState({\n        totalUsers: 0,\n        totalClients: 0,\n        activeClients: 0\n    });\n    const [isAddingUser, setIsAddingUser] = useState(false);\n    const [editingUser, setEditingUser] = useState(null);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [passwordView, setPasswordView] = useState({\n        userId: null,\n        username: '',\n        hashedPassword: '',\n        isVisible: false,\n        showPassword: false\n    });\n    const passwordModalRef = useRef(null);\n\n    useEffect(() => {\n        fetchUsers();\n        fetchStats();\n    }, []);\n\n    useEffect(() => {\n        // Add event listener for closing the password modal when clicking outside\n        function handleClickOutside(event) {\n            if (passwordModalRef.current && !passwordModalRef.current.contains(event.target)) {\n                setPasswordView(prev => ({...prev, isVisible: false}));\n            }\n        }\n        \n        // Attach the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            // Remove the event listener on cleanup\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [passwordModalRef]);\n\n    const fetchUsers = async () => {\n        try {\n            const response = await getUsers();\n            setUsers(response || []);\n            setStats(prevStats => ({\n                ...prevStats,\n                totalUsers: response ? response.length : 0\n            }));\n        } catch (error) {\n            console.error('Error fetching users:', error);\n            setErrorMessage('Failed to fetch users. Please try again.');\n        }\n    };\n\n    const fetchStats = async () => {\n        try {\n            // In a real app, you would call an API endpoint to get dashboard stats\n            // For now, we'll use sample data\n            setStats({\n                totalUsers: users.length,\n                totalClients: 15,\n                activeClients: 12\n            });\n        } catch (error) {\n            console.error('Error fetching stats:', error);\n        }\n    };\n\n    const handleAddUser = () => {\n        setIsAddingUser(true);\n        setEditingUser(null);\n    };\n\n    const handleEditUser = (user) => {\n        setEditingUser(user);\n        setIsAddingUser(false);\n    };\n\n    const handleUserSaved = () => {\n        setIsAddingUser(false);\n        setEditingUser(null);\n        fetchUsers();\n    };\n\n    const handleCancelUserForm = () => {\n        setIsAddingUser(false);\n        setEditingUser(null);\n    };\n\n    const handleDeleteUser = async (userId) => {\n        if (window.confirm(\"Are you sure you want to delete this user?\")) {\n            try {\n                await deleteUser(userId);\n                fetchUsers();\n            } catch (error) {\n                console.error('Error deleting user:', error);\n                setErrorMessage('Failed to delete user. Please try again.');\n            }\n        }\n    };\n\n    const handleViewPassword = async (userId, username) => {\n        try {\n            // Close the modal if clicking the same user's button when already open\n            if (passwordView.isVisible && passwordView.userId === userId) {\n                setPasswordView(prev => ({...prev, isVisible: false}));\n                return;\n            }\n\n            const response = await getUserPassword(userId);\n            setPasswordView({\n                userId,\n                username: response.username || username,\n                hashedPassword: response.hashedPassword || 'Password not available',\n                isVisible: true,\n                showPassword: false\n            });\n        } catch (error) {\n            console.error('Error fetching user password:', error);\n            setErrorMessage('Failed to fetch user password. Please try again.');\n        }\n    };\n\n    const togglePasswordVisibility = () => {\n        setPasswordView(prev => ({...prev, showPassword: !prev.showPassword}));\n    };\n\n    return (\n        <div className=\"admin-dashboard\">\n            <h1>Admin Dashboard</h1>\n            \n            {errorMessage && (\n                <div className=\"error-message\">\n                    {errorMessage}\n                    <button onClick={() => setErrorMessage('')} className=\"dismiss-button\">×</button>\n                </div>\n            )}\n            \n            <div className=\"stats-cards\">\n                <div className=\"stat-card\">\n                    <h3>Total Users</h3>\n                    <div className=\"stat-value\">{stats.totalUsers}</div>\n                </div>\n                <div className=\"stat-card\">\n                    <h3>Total Clients</h3>\n                    <div className=\"stat-value\">{stats.totalClients}</div>\n                </div>\n                <div className=\"stat-card\">\n                    <h3>Active Clients</h3>\n                    <div className=\"stat-value\">{stats.activeClients}</div>\n                </div>\n            </div>\n            \n            {isAddingUser ? (\n                <div className=\"card-section\">\n                    <div className=\"card-section-header\">\n                        <h2>Create New User</h2>\n                    </div>\n                    <div className=\"card-section-content\">\n                        <UserCreate onSave={handleUserSaved} onCancel={handleCancelUserForm} />\n                    </div>\n                </div>\n            ) : editingUser ? (\n                <div className=\"card-section\">\n                    <div className=\"card-section-header\">\n                        <h2>Edit User</h2>\n                    </div>\n                    <div className=\"card-section-content\">\n                        <UserForm \n                            user={editingUser} \n                            onSave={handleUserSaved} \n                            onCancel={handleCancelUserForm} \n                        />\n                    </div>\n                </div>\n            ) : (\n                <div className=\"card-section\">\n                    <div className=\"card-section-header\">\n                        <h2>Registered Users</h2>\n                        <button className=\"add-user-button\" onClick={handleAddUser}>\n                            <i className=\"fas fa-plus\"></i> Add User\n                        </button>\n                    </div>\n                    <div className=\"card-section-content\">\n                        <table className=\"user-table\">\n                            <thead>\n                                <tr>\n                                    <th>Username</th>\n                                    <th>Role</th>\n                                    <th>Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {users.length > 0 ? (\n                                    users.map(user => (\n                                        <tr key={user._id}>\n                                            <td>{user.username}</td>\n                                            <td>\n                                                <span className={`user-role ${user.role}`}>\n                                                    {user.role}\n                                                </span>\n                                            </td>\n                                            <td>\n                                                <button \n                                                    className=\"action-button edit\"\n                                                    onClick={() => handleEditUser(user)}\n                                                >\n                                                    Edit\n                                                </button>\n                                                <button \n                                                    className=\"action-button delete\"\n                                                    onClick={() => handleDeleteUser(user._id)}\n                                                >\n                                                    Delete\n                                                </button>\n                                                <button \n                                                    className=\"action-button view-password\"\n                                                    onClick={() => handleViewPassword(user._id, user.username)}\n                                                >\n                                                    {passwordView.isVisible && passwordView.userId === user._id \n                                                        ? 'Hide Password' \n                                                        : 'View Password'}\n                                                </button>\n                                            </td>\n                                        </tr>\n                                    ))\n                                ) : (\n                                    <tr>\n                                        <td colSpan=\"3\" style={{ textAlign: 'center' }}>No users found</td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            )}\n\n            {/* Password View Modal */}\n            {passwordView.isVisible && (\n                <div className=\"password-modal-overlay\">\n                    <div className=\"password-modal\" ref={passwordModalRef}>\n                        <div className=\"password-modal-header\">\n                            <h3>Password for {passwordView.username}</h3>\n                            <button \n                                className=\"dismiss-button\" \n                                onClick={() => setPasswordView(prev => ({...prev, isVisible: false}))}\n                            >\n                                ×\n                            </button>\n                        </div>\n                        <div className=\"password-modal-content\">\n                            <div className=\"password-section\">\n                                <div className=\"password-section-header\">\n                                    <p>Hashed Password:</p>\n                                    <button \n                                        className=\"toggle-password-visibility\" \n                                        onClick={togglePasswordVisibility}\n                                    >\n                                        {passwordView.showPassword ? 'Hide' : 'Show'} Password\n                                    </button>\n                                </div>\n                                <div className=\"password-display\">\n                                    {passwordView.showPassword \n                                        ? passwordView.hashedPassword \n                                        : '••••••••••••••••••••••••••••••••••••••••'}\n                                </div>\n                            </div>\n                            <p className=\"password-note\">\n                                <i className=\"fas fa-info-circle\"></i> This is a hashed password. For security reasons, the actual password cannot be retrieved.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default AdminDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}