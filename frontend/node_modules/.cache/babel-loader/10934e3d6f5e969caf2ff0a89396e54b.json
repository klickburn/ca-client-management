{"ast":null,"code":"var _jsxFileName = \"/Users/klickburn/Final/client-db/ca-client-management/frontend/src/components/User/UserForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './UserForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFormState = {\n  username: '',\n  password: '',\n  role: 'user'\n};\nconst UserForm = ({\n  user,\n  onSave,\n  onCancel\n}) => {\n  _s();\n  const [formData, setFormData] = useState(initialFormState);\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [submitError, setSubmitError] = useState(null);\n  const isEditMode = !!(user !== null && user !== void 0 && user._id);\n  useEffect(() => {\n    if (user) {\n      setFormData({\n        username: user.username || '',\n        password: '',\n        // Don't fill password field for security\n        role: user.role || 'user'\n      });\n    }\n  }, [user]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Clear error when field is updated\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: null\n      }));\n    }\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.username.trim()) {\n      newErrors.username = 'Username is required';\n    } else if (formData.username.trim().length < 3) {\n      newErrors.username = 'Username must be at least 3 characters';\n    }\n    if (!isEditMode && !formData.password.trim()) {\n      newErrors.password = 'Password is required';\n    } else if (!isEditMode && formData.password.trim().length < 6) {\n      newErrors.password = 'Password must be at least 6 characters';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    setLoading(true);\n    setSubmitError(null);\n    try {\n      // Only include password in payload if it's provided\n      const userData = {\n        username: formData.username,\n        role: formData.role\n      };\n      if (formData.password.trim()) {\n        userData.password = formData.password;\n      }\n      await onSave(userData, isEditMode);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error saving user:', error);\n      setSubmitError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error saving user. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isEditMode ? 'Edit User' : 'Create New User'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), submitError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: submitError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"user-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          name: \"username\",\n          value: formData.username,\n          onChange: handleChange,\n          className: errors.username ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), errors.username && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-text\",\n          children: errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: isEditMode ? 'New Password (leave blank to keep current)' : 'Password'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          className: errors.password ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-text\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"role\",\n          children: \"Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"role\",\n          name: \"role\",\n          value: formData.role,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"user\",\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"admin\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"cancel-button\",\n          onClick: onCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"save-button\",\n          disabled: loading,\n          children: loading ? 'Saving...' : isEditMode ? 'Update User' : 'Create User'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(UserForm, \"dcHue1ODYm5nCIN5eiUaTE4A0Kk=\");\n_c = UserForm;\nexport default UserForm;\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","initialFormState","username","password","role","UserForm","user","onSave","onCancel","_s","formData","setFormData","errors","setErrors","loading","setLoading","submitError","setSubmitError","isEditMode","_id","handleChange","e","name","value","target","prev","validateForm","newErrors","trim","length","Object","keys","handleSubmit","preventDefault","userData","error","_error$response","_error$response$data","console","response","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/klickburn/Final/client-db/ca-client-management/frontend/src/components/User/UserForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './UserForm.css';\n\nconst initialFormState = {\n    username: '',\n    password: '',\n    role: 'user'\n};\n\nconst UserForm = ({ user, onSave, onCancel }) => {\n    const [formData, setFormData] = useState(initialFormState);\n    const [errors, setErrors] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [submitError, setSubmitError] = useState(null);\n    const isEditMode = !!user?._id;\n\n    useEffect(() => {\n        if (user) {\n            setFormData({\n                username: user.username || '',\n                password: '',  // Don't fill password field for security\n                role: user.role || 'user'\n            });\n        }\n    }, [user]);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prev => ({ ...prev, [name]: value }));\n        \n        // Clear error when field is updated\n        if (errors[name]) {\n            setErrors(prev => ({ ...prev, [name]: null }));\n        }\n    };\n\n    const validateForm = () => {\n        const newErrors = {};\n        \n        if (!formData.username.trim()) {\n            newErrors.username = 'Username is required';\n        } else if (formData.username.trim().length < 3) {\n            newErrors.username = 'Username must be at least 3 characters';\n        }\n        \n        if (!isEditMode && !formData.password.trim()) {\n            newErrors.password = 'Password is required';\n        } else if (!isEditMode && formData.password.trim().length < 6) {\n            newErrors.password = 'Password must be at least 6 characters';\n        }\n        \n        setErrors(newErrors);\n        return Object.keys(newErrors).length === 0;\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        \n        if (!validateForm()) return;\n        \n        setLoading(true);\n        setSubmitError(null);\n        \n        try {\n            // Only include password in payload if it's provided\n            const userData = {\n                username: formData.username,\n                role: formData.role\n            };\n            \n            if (formData.password.trim()) {\n                userData.password = formData.password;\n            }\n            \n            await onSave(userData, isEditMode);\n        } catch (error) {\n            console.error('Error saving user:', error);\n            setSubmitError(\n                error.response?.data?.message || \n                'Error saving user. Please try again.'\n            );\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"user-form-container\">\n            <h2>{isEditMode ? 'Edit User' : 'Create New User'}</h2>\n            \n            {submitError && (\n                <div className=\"error-message\">{submitError}</div>\n            )}\n            \n            <form onSubmit={handleSubmit} className=\"user-form\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"username\">Username</label>\n                    <input\n                        type=\"text\"\n                        id=\"username\"\n                        name=\"username\"\n                        value={formData.username}\n                        onChange={handleChange}\n                        className={errors.username ? 'error' : ''}\n                    />\n                    {errors.username && <div className=\"error-text\">{errors.username}</div>}\n                </div>\n                \n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">\n                        {isEditMode ? 'New Password (leave blank to keep current)' : 'Password'}\n                    </label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        value={formData.password}\n                        onChange={handleChange}\n                        className={errors.password ? 'error' : ''}\n                    />\n                    {errors.password && <div className=\"error-text\">{errors.password}</div>}\n                </div>\n                \n                <div className=\"form-group\">\n                    <label htmlFor=\"role\">Role</label>\n                    <select\n                        id=\"role\"\n                        name=\"role\"\n                        value={formData.role}\n                        onChange={handleChange}\n                    >\n                        <option value=\"user\">User</option>\n                        <option value=\"admin\">Admin</option>\n                    </select>\n                </div>\n                \n                <div className=\"form-actions\">\n                    <button \n                        type=\"button\" \n                        className=\"cancel-button\"\n                        onClick={onCancel}\n                    >\n                        Cancel\n                    </button>\n                    <button \n                        type=\"submit\" \n                        className=\"save-button\"\n                        disabled={loading}\n                    >\n                        {loading ? 'Saving...' : isEditMode ? 'Update User' : 'Create User'}\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default UserForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}